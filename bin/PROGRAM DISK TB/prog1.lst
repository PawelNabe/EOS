10 ' EOS FONT EDIT PROGRAM
20 SCREEN 0: COLOR 7,0,0: CLS
30 KEY 1,"PRESET":KEY 2,"DRAW L":KEY 3,"DRAW R":KEY 4,"DRAW U":KEY 5,"DRAW D"
40 KEY 6,"CLEAR":KEY 7,"BSAVE":KEY 8,"BLOAD":KEY 9,"IFU>TB":KEY 10,"END"
50 DEFINT A-Y: DEF USR0=2
60 DATADD=&H300: DOFF=249: DON=219: DCUR=43
70 EMSG52$="BAD FILE NUMBER"
80 EMSG53$="FILE NOT FOUND": EMSG61$="DISK FULL": EMSG64$="BAD FILE NAME"
90 EMSG70$="DISK WRITE PROTECT": EMSG71$="DISK NOT READY": EMSG72$="DISK MEDIA ERROR"
100 DEF SEG=0
110 ZSEG=PEEK(&H510)+(256*PEEK(&H511))+&H1001
120 DEF SEG
130 SEGID=VAL("&H"+HEX$(ZSEG))
140 DEF SEG=SEGID
150 FOR I1=0 TO 6*30-1: POKE DATADD+I1,0: NEXT I1
160 FOR I1=0 TO 30: POKE DATADD+&HC0+I1,I1: NEXT I1
170 BLOAD"BSUB1.COM",0
180 DEF SEG
190 ON ERROR GOTO 1490
200 ON KEY(1) GOSUB 940: ON KEY(2) GOSUB 880: ON KEY(3) GOSUB 910: ON KEY(4) GOSUB 820: ON KEY(5) GOSUB 850
210 ON KEY(6) GOSUB 1000: ON KEY(7) GOSUB 1270: ON KEY(8) GOSUB 1330: ON KEY(9) GOSUB 1660: ON KEY(10) GOSUB 1610
220 ON KEY(11) GOSUB 700: ON KEY(14) GOSUB 730: ON KEY(12) GOSUB 760: ON KEY(13) GOSUB 790
230 GOSUB 250: GOSUB 500: GOTO 620
240 ' DISPLAY ALL DATA
250 PX=0:PY=0
260 FOR I1=0 TO 2
270    FOR I2=0 TO 9
280       GOSUB 350
290       PY=PY+2
300    NEXT I2
310    PX=PX+8:PY=0
320 NEXT I1
330 PX=0: PY=0: RETURN
340 '  DISPLAY 1 CHARCTER
350 FOR I3=0 TO 4
360    GOSUB 480
370    FOR I4=0 TO 6
380       LOCATE PX+I4+1,PY+6: IF (FDATA AND (2^I4))=0 THEN PRINT CHR$(DOFF) ELSE PRINT CHR$(DON)
390    NEXT I4
400    PY=PY+1
410 NEXT I3
420 RETURN
430 FOR I1=1 TO 14: KEY(I1) STOP: NEXT I1: RETURN
440 ' DISPLAY 1 DOT
450 LOCATE PX+1,PY+6: IF FDOT=0 THEN PRINT CHR$(DOFF) ELSE PRINT CHR$(DON)
460 RETURN
470 ' PEEK CHARCTER DATA
480 DEF SEG=SEGID: FADD=DATADD+((PX\8)*60)+(PY-(PY\7)): FDATA=PEEK(FADD): FDOT=FDATA AND (2^(PX MOD 8)): DEF SEG: RETURN
490 '  cursor
500 GOSUB 480: IF FDOT=0 THEN ATR=&H87 ELSE ATR=&HF0
510 VADD=160*(PX)+2*(PY+5): DEF SEG=&HB800: POKE VADD,DCUR: POKE VADD+1,ATR: DEF SEG: RETURN
520 ' ALL DATA = 0 ?
530 DEF SEG=SEGID
540 FOR I1=0 TO 6*30-1
550     IF PEEK(DATADD+I1)<>0 THEN 580
560 NEXT I1
570 DEF SEG: ALL=0: RETURN
580 DEF SEG: ALL=1: RETURN
590 '  DATA COM
600 DEF SEG=SEGID: R$=USR0(SMSG$): RVAL=PEEK(0): DEF SEG: RETURN
610 '  MAIN
620 IF INKEY$<>"" THEN 620
630 LOCATE 1,1: FOR KEYNO=1 TO 14: KEY(KEYNO) ON: NEXT KEYNO: MDI=0: KEY ON
640 IF MDI<>0 THEN 620
650 KY$=INKEY$:IF KY$="" THEN 640
660 MID=1: GOSUB 430
670 IF KY$=" " THEN GOSUB 1050:GOSUB 500
680 GOTO 620
690 ' UP
700 IF MDI=0 THEN MDI=1 ELSE RETURN
710 GOSUB 430: GOSUB 1090: GOSUB 500: RETURN
720 ' DOWN
730 IF MDI=0 THEN MDI=1 ELSE RETURN
740 GOSUB 430: GOSUB 1130: GOSUB 500: RETURN
750 ' LEFT
760 IF MDI=0 THEN MDI=1 ELSE RETURN
770 GOSUB 430: GOSUB 1170: GOSUB 500: RETURN
780 ' RIGHT
790 IF MDI=0 THEN MDI=1 ELSE RETURN
800 GOSUB 430: GOSUB 1220: GOSUB 500: RETURN
810 ' DRAW U
820 IF MDI=0 THEN MDI=1 ELSE RETURN
830 GOSUB 430: GOSUB 1050: GOSUB 1090: GOSUB 500: RETURN
840 ' DRAW D
850 IF MDI=0 THEN MDI=1 ELSE RETURN
860 GOSUB 430: GOSUB 1050: GOSUB 1130: GOSUB 500: RETURN
870 ' DRAW L
880 IF MDI=0 THEN MDI=1 ELSE RETURN
890 GOSUB 430: GOSUB 1050: GOSUB 1170: GOSUB 500: RETURN
900 ' DRAW R
910 IF MDI=0 THEN MDI=1 ELSE RETURN
920 GOSUB 430: GOSUB 1050: GOSUB 1220: GOSUB 500: RETURN
930 ' PRESET
940 IF MDI=0 THEN MDI=1 ELSE RETURN
950 GOSUB 430
960 FDATA=FDATA AND (NOT(2^(PX MOD 8))):FDOT=0
970 DEF SEG=SEGID: POKE FADD,FDATA: DEF SEG
980 GOSUB 500: RETURN
990 ' CLEAR
1000 IF MDI=0 THEN MDI=1 ELSE RETURN
1010 GOSUB 430: CLRADD=6*(FADD\6): SPX=PX: SPY=PY: PX=8*(PX\8): PY=7*(PY\7)
1020 DEF SEG=SEGID:FOR I1=0 TO 4: POKE CLRADD+I1,0: NEXT I1: DEF SEG
1030 GOSUB 350: PX=SPX: PY=SPY: GOSUB 500: RETURN
1040 ' 1 DOT ON
1050 FDOT=2^(PX MOD 8): FDATA=FDATA OR FDOT
1060 DEF SEG=SEGID: POKE FADD,FDATA: DEF SEG
1070 RETURN
1080 ' U
1090 GOSUB 450: IF PX=0 THEN RETURN
1100 IF (PX MOD 8)=0 THEN ELSE PX=PX-1
1110 RETURN
1120 ' D
1130 GOSUB 450: IF PX=22 THEN RETURN
1140 IF (PX MOD 8)=6 THEN ELSE PX=PX+1
1150 RETURN
1160 ' L
1170 GOSUB 450: IF PY=0 THEN ELSE 1190
1180 IF PX < 7 THEN RETURN ELSE PX=PX-8: PY=67: RETURN
1190 IF (PY MOD 7)=0 THEN PY=PY-3 ELSE PY=PY-1
1200 RETURN
1210 ' R
1220 GOSUB 450: IF PY=67 THEN ELSE 1240
1230 IF PX > 15 THEN RETURN ELSE PX=PX+8: PY=0: RETURN
1240 IF (PY MOD 7)=4 THEN PY=PY+3 ELSE PY=PY+1
1250 RETURN
1260 ' BSAVE
1270 IF MDI=0 THEN MDI=1 ELSE RETURN
1280 GOSUB 430:GOSUB 530: IF ALL=0 THEN BEEP:RETURN
1290 MODE$="SAVE": KEY OFF: FILN$=""
1300 LOCATE 25,5: PRINT "SAVE";: GOSUB 1380: IF LEN(FILN$)=0 THEN RETURN
1310 LOCATE 25,50: PRINT SPACE$(29);: DEF SEG=SEGID: BSAVE FILN$+".DAT",DATADD,6*30: DEF SEG: RETURN
1320 ' BLOAD
1330 IF MDI=0 THEN MDI=1 ELSE RETURN
1340 GOSUB 430:MODE$="LOAD": KEY OFF: FILN$=""
1350 LOCATE 25,5: PRINT "LOAD";: GOSUB 1380: IF LEN(FILN$)=0 THEN RETURN
1360 LOCATE 25,50: PRINT SPACE$(29);: DEF SEG=SEGID: BLOAD FILN$+".DAT": DEF SEG: CLS: GOSUB 250: GOSUB 500: RETURN
1370 '  GET FILE NAME
1380 LOCATE 25,14: PRINT "INPUT FILENAME:";:INPY=30+LEN(FILN$)
1390 LOCATE 25,INPY
1400 KY$=INKEY$:IF KY$="" THEN 1400
1410 IF KY$=CHR$(13) THEN RETURN
1420 IF KY$=CHR$(8) AND LEN(FILN$)<>0 THEN GOSUB 1460: GOTO 1390
1430 IF KY$<"0" OR KY$>"z" OR LEN(FILN$)=8 THEN 1400
1440 LOCATE 25,INPY: PRINT KY$;: FILN$=FILN$+KY$: INPY=INPY+1: GOTO 1390
1450 '  BACK SPACE
1460 LOCATE 25,INPY:PRINT " ";: INPY=INPY-1
1470 LOCATE 25,INPY: PRINT " ";: FILN$=MID$(FILN$,1,LEN(FILN$)-1): RETURN
1480 ' ERROR
1490 IF ERR=52 THEN EMSG$=EMSG52$: GOTO 1570
1500 IF ERR=53 THEN EMSG$=EMSG53$: GOTO 1570
1510 IF ERR=61 THEN EMSG$=EMSG61$: GOTO 1570
1520 IF ERR=64 THEN EMSG$=EMSG64$: GOTO 1570
1530 IF ERR=70 THEN EMSG$=EMSG70$: GOTO 1570
1540 IF ERR=71 THEN EMSG$=EMSG71$: GOTO 1570
1550 IF ERR=72 THEN EMSG$=EMSG72$: GOTO 1570
1551 IF ERR=76 THEN EMSG$=EMSG64$: GOTO 1570
1552 IF ERR=54 THEN EMSG$=EMSG64$: GOTO 1570
1560 GOTO 1620
1570 LOCATE 25,50: PRINT EMSG$;
1580 IF MODE$="SAVE" THEN RESUME 1300
1590 IF MODE$="LOAD" THEN RESUME 1350
1600 '  END
1610 IF MDI=0 THEN ELSE RETURN
1620 KEY 1,"LIST ":KEY 2,"RUN"+CHR$(13):KEY 3,"LOAD"+CHR$(34):KEY 4,"SAVE"+CHR$(34):KEY 5,"CONT"+CHR$(13)
1630 KEY 6,","+CHR$(34)+"LPT1:"+CHR$(34)+CHR$(13):KEY 7,"TRON"+CHR$(13):KEY 8,"TROFF"+CHR$(13):KEY 9,"KEY ":KEY 10,"SCREEN 0,0,0"+CHR$(13)
1640 ON ERROR GOTO 0: DEF SEG: CLS: END
1650 '  IFU --> TB
1660 IF MDI=0 THEN MDI=1 ELSE RETURN
1670 GOSUB 430: KEY OFF
1680 LOCATE 25,5: PRINT "DATA SET: PRESS SPACEBAR   ";
1690 IF INKEY$<>"" THEN 1690
1700 KY$=INKEY$: IF KY$="" THEN 1700
1710 IF KY$=CHR$(13) THEN RETURN
1720 IF KY$=" " THEN ELSE 1690
1722 SMSG$=CHR$(&H5A)+CHR$(&HA5)+CHR$(&H1)+CHR$(&H0)+CHR$(&H0)+CHR$(&H0)+CHR$(0)+CHR$(0)+CHR$(0)+CHR$(0)+CHR$(0)
1723 GOSUB 600: IF RVAL<>0 THEN 2290
1724 SMSG$=CHR$(&H5A)+CHR$(&HA7)+CHR$(&H0)+CHR$(&H80)+CHR$(&H7)+CHR$(&H7F)+CHR$(0)+CHR$(0)+CHR$(0)+CHR$(0)+CHR$(0)
1725 GOSUB 600: IF RVAL<>0 THEN 2290
1726 SMSG$=CHR$(&H5A)+CHR$(&HA7)+CHR$(&H4)+CHR$(&H80)+CHR$(&H0)+CHR$(&HC)+CHR$(0)+CHR$(0)+CHR$(0)+CHR$(0)+CHR$(0)
1727 GOSUB 600: IF RVAL<>0 THEN 2290
1730 LOCATE 25,5: PRINT SPACE$(74);
1740 GOSUB 2250: IF RVAL<>0 THEN 2290     ' LOAD START & STORE
1750 IF ZSTART=ZSTORE THEN 1810
1760 IF INKEY$<>"" THEN 1760
1770 LOCATE 25,5: PRINT "DATA CLEAR & PRESS SPACEBAR";
1780 KY$=INKEY$: IF KY$="" THEN 1780
1790 IF KY$=CHR$(13) THEN RETURN
1800 IF KY$=" " THEN 1680 ELSE 1780
1810 GOSUB 530: IF ALL=0 THEN 2010
1820 '  SET CHARCTER DATA
1830 LOCATE 25,5: PRINT "IFU -> TB";
1840 SMSG$=CHR$(&H5A)+CHR$(&HA7)+CHR$(&H3A)+CHR$(&H80)+CHR$(&H87)+CHR$(&HFF)+CHR$(0)+CHR$(0)+CHR$(0)+CHR$(0)+CHR$(0)
1850 GOSUB 600: IF RVAL<>0 THEN 2290      'SET START ADDRESS-H
1860 SMSG$=CHR$(&H5A)+CHR$(&HA7)+CHR$(&H3B)+CHR$(&H80)+CHR$(0)+CHR$(&HFF)+CHR$(0)+CHR$(0)+CHR$(0)+CHR$(0)+CHR$(0)
1870 GOSUB 600: IF RVAL<>0 THEN 2290      'SET START ADDRESS-L
1880 GOSUB 2250: IF RVAL<>0 THEN 2290
1885 IF HEX$(ZSTART)<>HEX$(&H8700) THEN 2290
1890 SMSG$=CHR$(&H5A)+CHR$(&HA7)+CHR$(&H0)+CHR$(&H87)+CHR$(&HFF)+CHR$(&HFF)+CHR$(0)+CHR$(0)+CHR$(0)+CHR$(0)+CHR$(0)
1900 GOSUB 600: IF RVAL<>0 THEN 2290      'SET START DATA TO FFh
1910 SMSG$=CHR$(&H5A)+CHR$(&HAD)+CHR$(&H1)+CHR$(0)+CHR$(0)+CHR$(0)+CHR$(0)+CHR$(0)+CHR$(0)+CHR$(0)+CHR$(0)
1920 GOSUB 600: IF RVAL<>0 THEN 2290      'BUSY
1930 SMSG$=CHR$(&H5A)+CHR$(&HA9)+CHR$(&H0)+CHR$(&H1)+CHR$(&H1D)+CHR$(&H1)+CHR$((DATADD+&HC0) MOD &H100)+CHR$((DATADD+&HC0)\&H100)+CHR$(&H1E)+CHR$(0)+CHR$(2)
1940 GOSUB 600: IF RVAL<>0 THEN 2290      'NOTE1$=CHR$(&H0)--CHR$(&H1D)
1950 SMSG$=CHR$(&H5A)+CHR$(&HA9)+CHR$(&H0)+CHR$(&H6)+CHR$(&HB3)+CHR$(&H6)+CHR$(DATADD MOD &H100)+CHR$(DATADD\&H100)+CHR$(&HB4)+CHR$(0)+CHR$(2)
1960 GOSUB 600: IF RVAL<>0 THEN 2290      'SET CHARCTER DATA
1970 SMSG$=CHR$(&H5A)+CHR$(&HAD)+CHR$(&HC)+CHR$(0)+CHR$(0)+CHR$(0)+CHR$(0)+CHR$(0)+CHR$(0)+CHR$(0)+CHR$(0)
1980 GOSUB 600: IF RVAL<>0 THEN 2290      'CLEAR
1990 RETURN
2000 '  CLEAR CHARCTER DATA
2010 LOCATE 25,5: PRINT "DATA CLEAR";
2020 SMSG$=CHR$(&H5A)+CHR$(&HA7)+CHR$(&H3A)+CHR$(&H80)+CHR$(&H86)+CHR$(&HFF)+CHR$(0)+CHR$(0)+CHR$(0)+CHR$(0)+CHR$(0)
2030 GOSUB 600: IF RVAL<>0 THEN 2290         'SET START ADDRESS-H
2040 SMSG$=CHR$(&H5A)+CHR$(&HA7)+CHR$(&H3B)+CHR$(&H80)+CHR$(0)+CHR$(&HFF)+CHR$(0)+CHR$(0)+CHR$(0)+CHR$(0)+CHR$(0)
2050 GOSUB 600: IF RVAL<>0 THEN 2290         'SET START ADDRESS-L
2060 GOSUB 2250: IF RVAL<>0 THEN 2290
2065 IF HEX$(ZSTART)<>HEX$(&H8600) THEN 2290
2070 SMSG$=CHR$(&H5A)+CHR$(&HA7)+CHR$(&H0)+CHR$(&H86)+CHR$(&HFF)+CHR$(&HFF)+CHR$(0)+CHR$(0)+CHR$(0)+CHR$(0)+CHR$(0)
2080 GOSUB 600: IF RVAL<>0 THEN 2290      'SET START DATA TO FFh
2090 SMSG$=CHR$(&H5A)+CHR$(&HAD)+CHR$(&H1)+CHR$(0)+CHR$(0)+CHR$(0)+CHR$(0)+CHR$(0)+CHR$(0)+CHR$(0)+CHR$(0)
2100 GOSUB 600: IF RVAL<>0 THEN 2290      'BUSY
2110 SMSG$=CHR$(&H5A)+CHR$(&HA3)+CHR$(&H0)+CHR$(&H1)+CHR$(&HFF)+CHR$(&H5)+CHR$((DATADD+&H100) MOD &H100)+CHR$((DATADD+&H100)\&H100)+CHR$(&H0)+CHR$(5)+CHR$(1)
2120 GOSUB 600: IF RVAL<>0 THEN 2290         'LOAD NOTE1$ -- NOTE4$
2130 DEF SEG=SEGID
2140 FOR I1=0 TO 39
2150     FOR I2=0 TO 29
2160         IF PEEK(DATADD+&H100+(&H20*I1)+I2) < &H20 THEN POKE DATADD+&H100+(&H20*I1)+I2,&H20
2170     NEXT I2
2180 NEXT I1
2190 DEF SEG
2200 SMSG$=CHR$(&H5A)+CHR$(&HA9)+CHR$(&H0)+CHR$(&H1)+CHR$(&HFF)+CHR$(&H5)+CHR$((DATADD+&H100) MOD &H100)+CHR$((DATADD+&H100)\&H100)+CHR$(&H0)+CHR$(5)+CHR$(2)
2210 GOSUB 600: IF RVAL<>0 THEN 2290         'SAVE NOTE1$ -- NOTE4$
2220 SMSG$=CHR$(&H5A)+CHR$(&HAD)+CHR$(&HC)+CHR$(0)+CHR$(0)+CHR$(0)+CHR$(0)+CHR$(0)+CHR$(0)+CHR$(0)+CHR$(0)
2230 GOSUB 600: IF RVAL<>0 THEN 2290         'CLEAR
2240 RETURN
2250 SMSG$=CHR$(&H5A)+CHR$(&HA3)+CHR$(&H3A)+CHR$(&H0)+CHR$(&H3F)+CHR$(&H0)+CHR$((DATADD+&HE0) MOD &H100)+CHR$((DATADD+&HE0)\&H100)+CHR$(6)+CHR$(0)+CHR$(1)
2260 GOSUB 600:                              'LOAD   START & STORE
2270 DEF SEG=SEGID: ZSTART=PEEK(DATADD+&HE0)*&H100+PEEK(DATADD+&HE1)
2280 ZSTORE=PEEK(DATADD+&HE4)*&H100+PEEK(DATADD+&HE5): DEF SEG :RETURN
2290 LOCATE 25,60: PRINT "I/O ERROR";: GOTO 1680
